name: Build and Publish

on:
    workflow_dispatch:
        inputs:
            environment:
                description: Environment to deploy to
                required: true
                default: dev
                type: choice
                options:
                    - dev
                    - qa
                    - staging
                    - production
            version:
              type: string
              required: true
              description: Version use for tagging in format i.e major.minor.patch-env

    workflow_call:
        inputs:
            environment:
                type: string
                description: Environment to deploy to dev, qa or staging
                default: dev
            version:
                type: string
                description: Version use for tagging
                required: true

env:
  SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}
  IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-publish:
        runs-on: ubuntu-latest
        environment: ${{ inputs.environment }}
        env:
            DOCKER_REGISTRY: ${{ vars.REGISTRY }}
        permissions:
            contents: read
            packages: write
        steps:
            - uses: actions/checkout@v4

            - name: Install SOPS
              run: |
                SOPS_VERSION=3.9.3
                curl -L "https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64" -o sops
                chmod +x sops
                sudo mv sops /usr/local/bin/sops

            - name: Decrypt secrets file
              run: sops -d --input-type dotenv --output-type dotenv secrets/.env.${{ inputs.environment }} > .env

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
              with:
                platforms: linux/arm64/v8

            - name: Cache register
              uses: actions/cache@v4
              with:
                path: /tmp/.buildx-cache
                key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile', 'src/**', 'Cargo.toml', 'Cargo.lock') }}
                restore-keys: |
                    ${{ runner.os }}-buildx-

            - name: Log in to container registry
              uses: docker/login-action@v3
              with:
                registry: ${{ env.DOCKER_REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Docker metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                images: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
                tags: |
                    type=raw,value=${{ inputs.version }}
                    type=raw,value=${{ inputs.environment }}-latest,enable=${{ github.event_name != 'pull_request' }}
                    type=raw,value=latest,enable=${{ inputs.environment == 'production' && github.event_name != 'pull_request' }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                context: .
                push: true
                tags: ${{ steps.meta.outputs.tags }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=local,src=/tmp/.buildx-cache
                cache-to: type=local,dest=/tmp/.buildx-cache-new

            - name: Move cache
              run: |
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache

            - name: Clean up
              if: always()
              run: rm -f .env
