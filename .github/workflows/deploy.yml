name: Deploy

on:
    workflow_dispatch:
        inputs:
            environment:
                description: Environment to deploy to
                required: true
                default: dev
                type: choice
                options:
                    - dev
                    - qa
                    - staging
            platform:
                description: Platform to build package for
                type: choice
                options:
                    - mac
                    - windows
    workflow_call:
        inputs:
            environment:
                type: string
                description: Environment to deploy to dev, qa or staging
                default: dev
            platform:
                type: string
                description: windows or mac
                default: mac

env:
  SOPS_AGE_KEY: ${{ secrets.SOPS_AGE_KEY }}

jobs:
    setup-version:
        runs-on: ubuntu-latest
        outputs:
            version: ${{ steps.get-version.outputs.version }}
            version_tag: ${{ steps.get-version.outputs.version_tag }}
        steps:
          - uses: actions/checkout@v4
            with:
                fetch-depth: 0

          - name: Get release version
            id: get-version
            uses: paulhatch/semantic-version@v5.4.0
            with:
                tag_prefix: "v"
                major_pattern: "(MAJOR)"
                minor_pattern: "(MINOR)"
                version_format: "${major}.${minor}.${patch}-${{ inputs.environment }}-prerelease${increment}"
                search_commit_body: true

    setup-env:
        runs-on: ubuntu-latest
        needs: [ setup-version]
        steps:
            - uses: actions/checkout@v4

            - name: Install SOPS
              run: |
                SOPS_VERSION=3.9.3
                curl -L "https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux.amd64" -o sops
                chmod +x sops
                sudo mv sops /usr/local/bin/sops

            - name: Decrypt secrets file
              run: sops -d --input-type dotenv --output-type dotenv secrets/.env.${{ inputs.environment }} > .env


    build:
        runs-on: ubuntu-latest
        needs: [setup-env]
        steps:
            - uses: actions/checkout@v4
            - name: logger
              run: ls

            - name: Clean up
              if: always()
              run: |
                rm -f .env
